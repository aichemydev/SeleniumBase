# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI Test

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:

    env:
      PY_COLORS: "1"
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      max-parallel: 6
      matrix:
        python-version: [2.7, 3.5, 3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Download TestGold Interceptor
      run: |
        wget -o selenium-20.11.0-py2.py3-none-any.whl https://dev.testgold.dev/api/interceptor/download/secured/selenium-20.11.0-py2.py3-none-any.whl?walToken=eyJhbGciOiJIUzI1NiIsInR5cGUiOiJKV1QifQ.eyJhdWQiOiJwbGF5Z3JvdW5kLnRlc3Rnb2xkLmRldiIsImF1dGhfcm9sZSI6ImF1dGhlbnRpY2F0ZWQiLCJlbWFpbCI6ImFpY2hlbXlkZXZpbmNAZ21haWwuY29tIiwiZXhwIjoxNjM3ODc5NjA5LCJpYXQiOjE2MzUyODc2MDksImlzcyI6InBsYXlncm91bmQudGVzdGdvbGQuZGV2IiwianRpIjoiOTBkZjliYmQtY2ExNy00YWYxLWJmY2UtNjY2MDYzM2Q2NDI4IiwibmFtZSI6IkFJY2hlbXkgSW5jIiwib3JnYW5pemF0aW9ucyI6e30sInByb2R1Y3RfdHlwZSI6ImNvbW11bml0eSIsInNjb3BlcyI6WyJ1aSJdLCJzdWIiOiI1ZTIzMzJiOC00NjYyLTRhOTYtODM1ZC1lYzBlYTIwYzE3YmYiLCJ0ZWFtcyI6e30sInZlciI6Mn0.QlNX9ZoyVfTQ-_sas3z9WSprHAJhGm0vRCggX16k2CY
    - name: Printing Directory Contents
      run: |
        ls
    - name: Install TestGold Interceptor
      run: |
        pip install selenium-20.11.0-py2.py3-none-any.whl -U .
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install selenium-20.11.0-py2.py3-none-any.whl -U .
    - name: Install SeleniumBase
      run: |
        python setup.py install
    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are flake8 issues
        flake8 . --count --show-source --statistics --exclude=temp
    - name: Install Chrome and Firefox
      run: |
        sudo apt install google-chrome-stable
        sudo apt-get install firefox
    - name: Check the console scripts interface
      run: |
        seleniumbase
        sbase
    - name: Install chromedriver and geckodriver (Firefox Webdriver)
      run: |
        seleniumbase install chromedriver
        seleniumbase install geckodriver
        
        
    - name: Make sure pytest is working
      run: |
        echo "def test_1(): pass" > nothing.py
        pytest nothing.py
    - name: Make sure nosetests is working
      run: |
        echo "def test_2(): pass" > nothing2.py
        nosetests nothing2.py
    - name: Run pytest verify_framework.py --browser=chrome --headless
      run: |
        pytest examples/unit_tests/verify_framework.py --browser=chrome --headless -v -s --junit-xml=junit/test-results.xml
    - name: Run pytest boilerplate_test.py --browser=chrome --headless
      run: |
        pytest examples/boilerplates/boilerplate_test.py --browser=chrome --headless -v -s --junit-xml=junit/test-results.xml
    - name: Run pytest test_demo_site.py --browser=chrome --headless
      run: |
        pytest examples/test_demo_site.py --browser=chrome --headless -v -s --junit-xml=junit/test-results.xml
    - name: Run pytest my_first_test.py --browser=chrome --headless
      run: |
        pytest examples/my_first_test.py --browser=chrome --headless -v -s --junit-xml=junit/test-results.xml
    - name: Run pytest test_inspect_html.py --browser=chrome --headless
      run: |
        pytest examples/test_inspect_html.py --browser=chrome --headless -v -s --junit-xml=junit/test-results.xml
    - name: Run pytest my_first_test.py --browser=firefox --headless
      run: |
        pytest examples/my_first_test.py --browser=firefox --headless -v -s --junit-xml=junit/test-results.xml
